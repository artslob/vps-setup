---
- include_vars: secrets.yml

- name: Check nginx is installed
  apt:
    name: nginx
    state: present
  check_mode: true
  register: check_nginx

- name: Install nginx
  apt:
    package: nginx
    update_cache: yes
  when: check_nginx.changed

- name: clone acme repo
  git:
    repo: https://github.com/Neilpang/acme.sh.git
    dest: "{{ homedir }}/acme.sh"

- name: Install acme
  command: |
    ./acme.sh --install \
      --home "{{ acme_installed }}" \
      --certhome "{{ homedir }}/keys" \
      --accountemail "artslob@yandex.ru" \
      --log "{{ acme_installed }}/acme.sh.log"
  args:
    chdir: '{{ acme_dir }}'
  register: output
- debug: var=output.stdout_lines

- name: Issue cert
  command: |
    ./acme.sh --issue \
      --dns dns_cf \
      -d artslob.ru \
      -d '*.artslob.ru'
  args:
    chdir: '{{ acme_installed }}'
  environment:
    LE_WORKING_DIR: '{{ acme_installed }}'
    CF_Key: '{{ vault_cf_key }}'
    CF_Email: '{{ vault_cf_email }}'
  register: output
- debug: var=output.stdout_lines

- name: Install cert
  command: |
    ./acme.sh --install-cert \
      -d artslob.ru \
      -d '*.artslob.ru' \
      --key-file "{{ keys }}/artslob.ru/key.pem" \
      --fullchain-file "{{ keys }}/artslob.ru/cert.pem" \
      --reloadcmd "sudo service nginx force-reload"
  args:
    chdir: '{{ acme_installed }}'
  environment:
    LE_WORKING_DIR: '{{ acme_installed }}'
  register: output
- debug: var=output.stdout_lines

- name: Set autoupgrade
  command: ./acme.sh --upgrade --auto-upgrade
  args:
    chdir: '{{ acme_installed }}'
  environment:
    LE_WORKING_DIR: '{{ acme_installed }}'
  register: output
- debug: var=output.stdout_lines
